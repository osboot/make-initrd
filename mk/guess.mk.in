# SPDX-License-Identifier: GPL-3.0-or-later

AUTODETECT ?= all

ifeq "$(MAKECMDGOALS)" 'guess-modules'
AUTODETECT := root device
endif

-include $(GUESSDIR)/guessed.mk

RECENTLY_ACTIVATED_FEATURES := \
	$(filter-out $(ALL_ACTIVE_FEATURES),$(call get-all-active-features))

GUESS_CONFIG_MODULES = \
	$(foreach mod1, \
		$(if $(findstring all,$(AUTODETECT)), \
			$(realpath $(wildcard $(DETECTDIR)/*)), \
			$(foreach mod,$(AUTODETECT),$(realpath $(DETECTDIR)/$(mod)))), \
		$(wildcard $(mod1)/config.mk))

GUESS_MODULES = \
	$(sort $(filter-out $(sort $(PASSED_GUESS_MODULES)), \
		$(if $(findstring all,$(AUTODETECT)), \
			$(notdir $(call filter-dirs,$(wildcard $(DETECTDIR)/*))), \
			$(AUTODETECT))))

-include $(GUESS_CONFIG_MODULES)

ifdef VERBOSE
$(info GUESS_MODULES        = $(notdir $(GUESS_MODULES)))
$(info PASSED_GUESS_MODULES = $(notdir $(PASSED_GUESS_MODULES)))
endif

PHONY += guess

ifneq "$(GUESS_MODULES)" ''

GUESS_DEVICE_SCRIPTS = $(call wildcard-features,guess/device)
GUESS_FSTYPE_SCRIPTS = $(call wildcard-features,guess/fstype)
ALL_ACTIVE_FEATURES := $(call get-all-active-features)

include \
	$(sort $(filter-out \
		$(foreach exl,$(DISABLE_GUESS),$(realpath $(exl:%=$(DETECTDIR)/%/rules.mk))), \
		$(foreach mod,$(GUESS_MODULES),$(realpath $(DETECTDIR)/$(mod)/rules.mk))))

PHONY += pre-guess test-guess-actions

pre-guess: check-for-root
	@mkdir -m 755 -p -- $(GUESSDIR)
	@for n in modules:rescue modules:add modalias:rescue modalias:add opt-modules:add opt-modalias:add features; do \
	   :>> "$(GUESSDIR)/guess:$$n"; \
	done

test-guess-actions: pre-guess
	@[ -n "$(TEST_GUESS_ACTIONS)" ] || { printf "TEST_GUESS_ACTIONS not specified\n" >&2; exit 1; }
	@for exe in $(TEST_GUESS_ACTIONS); do echo "RUN: $$exe"; "$$exe"; done

guess: pre-guess
	@$(VMSG) "Collection of guessed parameters ..."
	@$(TOOLSDIR)/guess-config > $(GUESSDIR)/guessed.mk
	@$(VMSG) "Guessing config ..."
	@$(MAKE) $(MFLAGS) -f @projectdir@/mk/main.mk guess PASSED_GUESS_MODULES+="$(GUESS_MODULES)"

else # !GUESS_MODULES

unknown_features = \
	$(filter-out \
		$(notdir $(wildcard $(FEATURESDIR)/*)), \
		$(sort $(FEATURES)))

ifneq "$(unknown_features)" ''
$(info WARNING: Unknown features are specified in the config: $(unknown_features))
endif

PHONY += depmod-host

depmod-host: check-for-root
	@:
ifeq ($(IGNORE_DEPMOD),)
	@$(VMSG) "Generating module dependencies on host ..."
	@depmod -a $(if $(KERNEL_SYSTEM_MAP),-F "$(KERNEL_SYSTEM_MAP)") "$(KERNEL)"
endif

guess: depmod-host
	@$(VMSG) "Guessing is complete"

endif # GUESS_MODULES
