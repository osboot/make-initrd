# SPDX-License-Identifier: GPL-3.0-or-later

.NOTPARALLEL:
.EXPORT_ALL_VARIABLES:
.DEFAULT_GOAL := all

PHONY =
TESTING_PUBLIC_GOALS =

ifneq ($(MAKE_INITRD_TESTING),)
TESTING_PUBLIC_GOALS += test-guess
endif

ifeq ($(MAKELEVEL),0)
public-goals  := all guess-config guess-modules feature-info bug-report $(TESTING_PUBLIC_GOALS)
private-goals := $(filter-out $(public-goals),$(MAKECMDGOALS))

ifneq ($(private-goals),)
$(error You MUST NOT call private goals directly: $(private-goals))
endif
endif # MAKELEVEL = 0

PHONY += all guess-config guess-modules feature-info bug-report
PHONY += check-for-root process-config test-guess

include @projectdir@/mk/config.mk

check-for-root::
	@:

ifeq ($(IGNORE_PRIV_CHECKS),)
IGNORE_PRIV_CHECKS := 1

check-for-root::
	@[ "$$(id -u)" = 0 ] || { \
	  echo "Only root can do that"; \
	  exit 1; \
	}
endif

ifneq ($(call in-goals,guess guess-config guess-modules test-guess-actions),)
include @projectdir@/mk/guess.mk
endif

ifneq ($(call in-goals,genimage),)
include @projectdir@/mk/genimage.mk
endif

ifneq ($(call in-goals,packimage),)
include @projectdir@/mk/packimage.mk
endif

ifneq ($(call in-goals,process-config),)
STARTUP_TIME   = $(shell date -u +'%s%N')
WORKDIR_SUFFIX = $(basename $(notdir $(INITRD_CONFIG)))
endif

all: check-for-root
	@rc=0; \
	for c in $(INITRD_CONFIG_LIST); do \
	    $(MAKE) $(MFLAGS) -f @projectdir@/mk/main.mk process-config INITRD_CONFIG="$$c" || \
	    { rc=1; break; }; \
	done; \
	rm -f -- $(TEMPDIR)/images; \
	exit $$rc

process-config: $(INITRD_CONFIG)
	@$(MSG) "Config file: $(INITRD_CONFIG)"
	@$(MAKE) $(MFLAGS) -f @projectdir@/mk/main.mk guess
	@$(MAKE) $(MFLAGS) -f @projectdir@/mk/main.mk genimage

guess-config: check-for-root guess
	@cat $(GUESSDIR)/guessed.mk >&4
	@rm $(verbose3) -rf -- "$(GUESSDIR)"
	@rmdir $(verbose3) -- "$(WORKDIR)"

guess-modules: check-for-root guess
	@for f in $(GUESSDIR)/guess:modules* $(GUESSDIR)/guess:modalias*; do \
		[ ! -s "$$f" ] || cat "$$f"; \
	done | \
	   depinfo \
	      --input=- \
	      $(if $(USE_MODPROBE_BLACKLIST),--use-blacklist) \
	      --set-version="$(KERNEL)" \
	      --no-prefix \
	      --no-firmware \
	      --no-builtin \
	      2>/dev/null | \
	   sort -u >&4
	$Qrm -rf -- "$(GUESSDIR)"
	$Qrmdir -- "$(WORKDIR)"

test-guess:
	@$(MAKE) $(MFLAGS) -f @projectdir@/mk/main.mk test-guess-actions
	$Qrm -rf -- "$(GUESSDIR)"
	$Qrm -rf -- "$(WORKDIR)"

feature-info:
	@$(MAKE) $(MFLAGS) -f @projectdir@/mk/main.mk show-feature-info

ifneq ($(call in-goals,show-feature-info),)
include @projectdir@/mk/show-feature-info.mk
endif

bug-report: check-for-root
	@mkdir -m 755 -p -- $(REPORTDIR)
	@$(TOOLSDIR)/bug-report >&4
	$Qrm -rf -- "$(REPORTDIR)"
	$Qrmdir -- "$(WORKDIR)"

# Declare the contents of the .PHONY variable as phony.
.PHONY: $(PHONY)
