# SPDX-License-Identifier: GPL-3.0-or-later

-include $(GUESSDIR)/guessed.mk

# The previous call to 'guess' has already done this.
IGNORE_DEPMOD := 1

.PHONY: create pack install genimage

create: depmod-host
	@$(VMSG) "Creating initrd image ..."
	@mkdir -m 755 -p $(verbose) -- $(ROOTDIR)
	@$(TOOLSDIR)/create-initrd

pack: create
	@$(VMSG) "Sorting sysvinit services ..."
	@$(TOOLSDIR)/sort-services --rcdir="$(ROOTDIR)/etc/rc.d" "$(ROOTDIR)/etc/rc.d/init.d"
	@$(VMSG) "Packing image to archive ..."
	@$(TOOLSDIR)/pack-image

install: pack
	@$(MSG) 'Used features: $(USED_FEATURES)'
	@$(MSG_N) 'Packed modules: '
	@find $(ROOTDIR)/lib/modules/$(KERNEL) -type f \( -name '*.ko'  -o -name '*.ko.*' \) -printf '%f\n' 2>/dev/null | \
	    sed -e 's/\.ko\(\.[^\.]\+\)\?$$//' | sort -u | tr '\n' ' '
	@printf '\n'
	@if [ -f "$(TEMPDIR)/images" ] && grep -Fxqs "$(IMAGEFILE)" "$(TEMPDIR)/images"; then \
	    echo ""; \
	    echo "An attempt to create two images with the same name. There is possibility" >&2; \
	    echo "that you forgot to define IMAGE_SUFFIX or IMAGEFILE in one of the config files." >&2; \
	    echo "" >&2; \
	    echo "ERROR: Unable to overwrite the image $(IMAGEFILE)" >&2; \
	    echo "" >&2; \
	    exit 1; \
	else \
	    $(VMSG) "Installing image ..."; \
	    $(MSG) "Unpacked size: `du -sh "$(WORKDIR)" |cut -f1 ||:`"; \
	    $(MSG) "Image size: `du -sh "$(WORKDIR)/initrd.img" |cut -f1 ||:`"; \
	    chmod 600 -- "$(WORKDIR)/initrd.img"; \
	    mv -f $(verbose) -- "$(WORKDIR)/initrd.img" "$(IMAGEFILE)"; \
	    echo "$(IMAGEFILE)" >> "$(TEMPDIR)/images"; \
	fi

genimage: install
	@$(MSG) "Image is saved as $(IMAGEFILE)"
	@echo

ALL_FEATURES         := $(call get-all-features)
ALL_DISABLE_FEATURES := $(call get-all-disable-features)
ALL_ACTIVE_FEATURES  := $(call get-all-active-features)

ifdef VERBOSE
$(info FEATURES              : $(sort $(FEATURES)))
$(info ALL FEATURES          : $(ALL_FEATURES))
$(info ALL DISABLED FEATURES : $(ALL_DISABLE_FEATURES))
$(info ALL ACTIVE FEATURES   : $(ALL_ACTIVE_FEATURES))
endif

# Load requested features
$(call include-features-once,$(sort $(ALL_ACTIVE_FEATURES)))
