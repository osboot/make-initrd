%post --erroronfail
	set -xefu

	export PATH="/srv/.build/dest/usr/sbin:/srv/.build/dest/usr/bin:$PATH"
	kver="$(find /lib/modules -mindepth 1 -maxdepth 1 -printf '%f\n' -quit)"

	mkdir -p /proc /sys /dev

	mount -t proc proc /proc
	mount -t sysfs sysfs /sys
	mount -t devtmpfs devfs /dev

	! blkid -L "EFI" >/dev/null ||
	  mount -t efivarfs none /sys/firmware/efi/efivars

	blkid
	findmnt

	tee /etc/initrd.mk <<-EOF
	IMAGEFILE = /boot/initrd-\$(KERNEL)\$(IMAGE_SUFFIX).img
	AUTODETECT = all
	`[ ! -f /etc/initrd.mk.addon ] || cat /etc/initrd.mk.addon`
	EOF

	tee /sbin/init.once <<-EOF
	#!/bin/sh
	printf '\n\n\n%s\n\n\n' 'IT WORKS!'
	exec systemctl reboot
	EOF
	chmod +x /sbin/init.once

	tee -a /usr/lib/systemd/system/init-once.service <<-EOF
	[Unit]
	Description=Make-initrd target
	DefaultDependencies=no
	After=systemd-user-sessions.service plymouth-quit-wait.service
	Before=system-getty.slice
	[Service]
	Type=oneshot
	ExecStart=/sbin/init.once
	RemainAfterExit=yes
	StandardOutput=tty
	[Install]
	WantedBy=sysinit.target
	EOF

	systemctl enable init-once

	env -i PATH="$PATH" \
	/srv/.build/dest/usr/sbin/make-initrd -vv -k "$kver"

	grub_install="$(  for f in grub-install  grub2-install;  do type -P "$f" && break; done )"
	grub_mkconfig="$( for f in grub-mkconfig grub2-mkconfig; do type -P "$f" && break; done )"
	grub_bootdir="$( find /boot -type d \( -name 'grub' -o -name 'grub2' \) )"
	grub_params="/etc/sysconfig/grub2"

	tee -a "$grub_params" <<-EOF
	 GRUB_CMDLINE_LINUX_DEFAULT='console=ttyS0,115200n8 @CMDLINE@'
	 GRUB_TIMEOUT=3
	 GRUB_TERMINAL_INPUT='serial console'
	 GRUB_TERMINAL_OUTPUT='serial console'
	 GRUB_SERIAL_COMMAND='serial --unit=0 --speed=115200'
	EOF

	if blkid -L "EFI" >/dev/null; then
		"$grub_install" \
			--root-directory "/" \
			--boot-directory "/boot" \
			--efi-directory  "/boot/efi" \
		#
	else
		bootdev=$(findmnt -k -no SOURCE -T /boot)
		syspath="$(readlink -ev "/sys/class/block/${bootdev#/dev/}")"
		syspath="${syspath%/*}/uevent"
		bootdev="$(sed -n -e 's,^DEVNAME=,/dev/,p' "$syspath")"

		"$grub_install" "$bootdev"
	fi

	"$grub_mkconfig" -o "$grub_bootdir/grub.cfg"

	cat "$grub_params"
	{
	 find /boot \! -type d -printf '%M %p\n'
	 find /boot    -type l -printf '%M %p -> %l\n'
	} | sort -t\  -k1,1

	umount /proc /sys /dev
%end
